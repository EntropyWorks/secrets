cache:
    paths:
        - ~/.npm

stages:
    - build
    - deploy
    - remote

before_script:
    - export TZ=America/Chicago
    - export REV=${CI_BUILD_REF:0:7}-$CI_BUILD_ID-$CI_BUILD_REF_NAME-$(date +%Y%m%d-%H:%M:%S)
    - export IMAGE=docker.umputun.com:5500/umputun/secrets:${CI_BUILD_REF_NAME/\//-}
    - export LATEST=docker.umputun.com:5500/umputun/secrets:latest
    - echo "buld revision=${REV}"
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN -e "umputun@gmail.com" docker.umputun.com:5500

build_app:
    stage: build
    script:
        - mkdir -p /go/src/github.com/umputun
        - ln -s /builds/umputun/secrets /go/src/github.com/umputun/secrets
        - cd /go/src/github.com/umputun/secrets
        - go get -v $(go list -e ./... | grep -v vendor) && go get -t $(go list -e ./... | grep -v vendor)
        - go test -v $(go list -e ./... | grep -v vendor)
        - go build -ldflags "-X main.revision=$REV" -o /builds/umputun/secrets/target/secrets github.com/umputun/secrets/app
        - ./script/coverage.sh
    artifacts:
        paths:
            - target/
    tags:
        - gobuilder

build_web:
    stage: build
    script:
        - apk --update --no-progress add nodejs-lts git python make g++
        - cd /builds/umputun/secrets/webapp
        - npm i --production && npm run build
        - mkdir -p /builds/umputun/secrets/target
        - ls -la /builds/umputun/secrets/webapp
        - ls -laR /builds/umputun/secrets/webapp/public/
        - mv -fv /builds/umputun/secrets/webapp/public/ /builds/umputun/secrets/target/docroot
    artifacts:
        paths:
            - target/
    tags:
        - gobuilder


deploy_nginx:
    stage: deploy
    script:
        - docker build -t docker.umputun.com:5500/umputun/secrets:nginx nginx
        - docker push docker.umputun.com:5500/umputun/secrets:nginx
    tags:
        - gobuilder
    except:
         - tags
         - develop

deploy_image:
    stage: deploy
    dependencies:
        - build_app
        - build_web
    script:
        - echo "image = $IMAGE"
        - docker build -t $IMAGE -f Dockerfile.gitlab .
        - docker push $IMAGE
    tags:
        - gobuilder
    except:
         - tags
         - develop

deploy_image_tag:
    stage: deploy
    dependencies:
        - build_app
    script:
        - echo "image = $IMAGE, latest = $LATEST"
        - docker build -t $IMAGE -f Dockerfile.gitlab .
        - docker push $IMAGE
        - docker tag $IMAGE $LATEST
        - docker push $LATEST
    tags:
        - gobuilder
    only:
        - tags

remote_update:
    stage: remote
    script:
        - ssh umputun@safesecret.info "cd /srv/secrets && docker-compose pull && docker-compose up -d"
    tags:
        - deploy
    only:
        - master
        - tags
